//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RuiJi.DataAccess.DF.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RuijiPortalContext : DbContext
    {
        public RuijiPortalContext()
            : base("name=RuijiPortalContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Article> Articles { get; set; }
        public virtual DbSet<SystemUser> SystemUsers { get; set; }
        public virtual DbSet<ArticleCategory> ArticleCategories { get; set; }
    
        public virtual int Article_Delete_p(Nullable<int> articleId)
        {
            var articleIdParameter = articleId.HasValue ?
                new ObjectParameter("ArticleId", articleId) :
                new ObjectParameter("ArticleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Article_Delete_p", articleIdParameter);
        }
    
        public virtual ObjectResult<Article_Insert_p_Result> Article_Insert_p(string title, string summary, string contentDetail, Nullable<int> articleCategoryId, string author, Nullable<bool> isPublished, Nullable<System.DateTime> publishDate, Nullable<bool> isDeleted, string updateBy, string insertBy, Nullable<System.DateTime> insertDate, Nullable<System.DateTime> updateDate)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var summaryParameter = summary != null ?
                new ObjectParameter("Summary", summary) :
                new ObjectParameter("Summary", typeof(string));
    
            var contentDetailParameter = contentDetail != null ?
                new ObjectParameter("ContentDetail", contentDetail) :
                new ObjectParameter("ContentDetail", typeof(string));
    
            var articleCategoryIdParameter = articleCategoryId.HasValue ?
                new ObjectParameter("ArticleCategoryId", articleCategoryId) :
                new ObjectParameter("ArticleCategoryId", typeof(int));
    
            var authorParameter = author != null ?
                new ObjectParameter("Author", author) :
                new ObjectParameter("Author", typeof(string));
    
            var isPublishedParameter = isPublished.HasValue ?
                new ObjectParameter("IsPublished", isPublished) :
                new ObjectParameter("IsPublished", typeof(bool));
    
            var publishDateParameter = publishDate.HasValue ?
                new ObjectParameter("PublishDate", publishDate) :
                new ObjectParameter("PublishDate", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var updateByParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));
    
            var insertByParameter = insertBy != null ?
                new ObjectParameter("InsertBy", insertBy) :
                new ObjectParameter("InsertBy", typeof(string));
    
            var insertDateParameter = insertDate.HasValue ?
                new ObjectParameter("InsertDate", insertDate) :
                new ObjectParameter("InsertDate", typeof(System.DateTime));
    
            var updateDateParameter = updateDate.HasValue ?
                new ObjectParameter("UpdateDate", updateDate) :
                new ObjectParameter("UpdateDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Article_Insert_p_Result>("Article_Insert_p", titleParameter, summaryParameter, contentDetailParameter, articleCategoryIdParameter, authorParameter, isPublishedParameter, publishDateParameter, isDeletedParameter, updateByParameter, insertByParameter, insertDateParameter, updateDateParameter);
        }
    
        public virtual ObjectResult<byte[]> Article_Save_p(Nullable<int> articleId, string title, string summary, string contentDetail, Nullable<int> articleCategoryId, string author, Nullable<bool> isPublished, Nullable<System.DateTime> publishDate, Nullable<bool> isDeleted, string updateBy, string insertBy, Nullable<System.DateTime> updateDate, Nullable<System.DateTime> insertDate, byte[] tIMESTAMP_Original, ObjectParameter row_affected)
        {
            var articleIdParameter = articleId.HasValue ?
                new ObjectParameter("ArticleId", articleId) :
                new ObjectParameter("ArticleId", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var summaryParameter = summary != null ?
                new ObjectParameter("Summary", summary) :
                new ObjectParameter("Summary", typeof(string));
    
            var contentDetailParameter = contentDetail != null ?
                new ObjectParameter("ContentDetail", contentDetail) :
                new ObjectParameter("ContentDetail", typeof(string));
    
            var articleCategoryIdParameter = articleCategoryId.HasValue ?
                new ObjectParameter("ArticleCategoryId", articleCategoryId) :
                new ObjectParameter("ArticleCategoryId", typeof(int));
    
            var authorParameter = author != null ?
                new ObjectParameter("Author", author) :
                new ObjectParameter("Author", typeof(string));
    
            var isPublishedParameter = isPublished.HasValue ?
                new ObjectParameter("IsPublished", isPublished) :
                new ObjectParameter("IsPublished", typeof(bool));
    
            var publishDateParameter = publishDate.HasValue ?
                new ObjectParameter("PublishDate", publishDate) :
                new ObjectParameter("PublishDate", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var updateByParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));
    
            var insertByParameter = insertBy != null ?
                new ObjectParameter("InsertBy", insertBy) :
                new ObjectParameter("InsertBy", typeof(string));
    
            var updateDateParameter = updateDate.HasValue ?
                new ObjectParameter("UpdateDate", updateDate) :
                new ObjectParameter("UpdateDate", typeof(System.DateTime));
    
            var insertDateParameter = insertDate.HasValue ?
                new ObjectParameter("InsertDate", insertDate) :
                new ObjectParameter("InsertDate", typeof(System.DateTime));
    
            var tIMESTAMP_OriginalParameter = tIMESTAMP_Original != null ?
                new ObjectParameter("TIMESTAMP_Original", tIMESTAMP_Original) :
                new ObjectParameter("TIMESTAMP_Original", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("Article_Save_p", articleIdParameter, titleParameter, summaryParameter, contentDetailParameter, articleCategoryIdParameter, authorParameter, isPublishedParameter, publishDateParameter, isDeletedParameter, updateByParameter, insertByParameter, updateDateParameter, insertDateParameter, tIMESTAMP_OriginalParameter, row_affected);
        }
    }
}
